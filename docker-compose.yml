services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:16
    container_name: go-postgresql-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: testdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Go PostgreSQL Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-postgresql-app
    ports:
      - "5433:5432"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: testdb
    networks:
      - app-network
    restart: unless-stopped

  # Web Frontend Service
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: go-postgresql-web
    ports:
      - "8080:8080"
    environment:
      WEB_PORT: 8080
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
